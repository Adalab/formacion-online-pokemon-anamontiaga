{"version":3,"sources":["services/fetchPokemones.js","components/Filter.js","components/PokeCard.js","components/PokeList.js","components/Home.js","components/PokeDetail.js","components/App.js","index.js"],"names":["fetchPokemones","fetch","then","response","json","Filter","props","getQuery","className","type","placeholder","onChange","PokeCard","pokemon","nullEvolution","evolution","id","src","image","alt","name","types","map","typeIndex","key","PokeList","pokemones","query","getPokemonDetail","filter","myPokemon","substr","toUpperCase","slice","index","to","onClick","Home","PokeDetail","routerProps","pokeDetail","pokeId","parseInt","match","params","item","height","weight","abilities","firstEvolutionName","Fragment","ability","abilityIndex","App","state","bind","this","getPokemones","data","url","pokeInfo","species","push","infoAbilities","infoPokemon","sprites","front_default","evolves_from_species","setState","results","pokeInfoDetail","event","currentTarget","value","exact","path","render","React","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.071cf733.chunk.js","sourcesContent":["const endpoint = \"https://pokeapi.co/api/v2/pokemon/?offset=0&limit=150\";\n\nconst fetchPokemones = () => {\n  return fetch(endpoint).then(response => response.json());\n};\n\n// definir asíncrono\n\nexport { fetchPokemones };\n","import React from \"react\";\nimport \"../stylesheets/Filter.scss\";\nimport PropTypes from \"prop-types\";\n\n// Desde app y luego desde Home le pasamos la función que coge el valor del inputy lo sube al estado.\n\nconst Filter = props => {\n  const { getQuery } = props;\n  return (\n    <div className=\"app__filter\">\n      <input type=\"text\" className=\"app__filter--input\" placeholder=\"Filtra pokemons por nombre...\" onChange={getQuery} />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  getQuery: PropTypes.func.isRequired\n};\n\nexport default Filter;\n","import React from \"react\";\nimport \"../stylesheets/PokeCard.scss\";\nimport PropTypes from \"prop-types\";\n\n// Pintamos todas las propiedades que necesitamos. Nos traemos pokemon del map que hemos realizado en Pokelist.\n// Para las types, mapeamos.\nconst PokeCard = props => {\n  const { pokemon } = props;\n  const nullEvolution = pokemon.evolution === \"\" ? \"hide\" : \"\";\n  return (\n    <div className=\"card\">\n      <div className=\"card__img--container\">\n        <p className=\"card__id\">ID /{pokemon.id} </p>\n        <img src={pokemon.image} className=\"card__img\" alt={pokemon.name}></img>\n      </div>\n      <div className=\"card__info--container\">\n        <h2 className=\"card__info--name\">{pokemon.name}</h2>\n        <ul className=\"card__info--types\">\n          {pokemon.types.map((type, typeIndex) => {\n            return (\n              <li className=\"card__info--type\" key={typeIndex}>\n                {type}\n              </li>\n            );\n          })}\n        </ul>\n\n        <div className={`card__info--evolution ${nullEvolution}`}>\n          <div className=\"card__info--evolution-line\"></div>\n          <div className=\"card__info--evolution-content\">\n            <p className=\"card__info--evolution-text\">Evoluciona de:</p>\n            <p className=\"card__info--evolution-pokemon\">{pokemon.evolution}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nPokeCard.propTypes = {\n  pokemon: PropTypes.object.isRequired,\n  type: PropTypes.string,\n  typeIndex: PropTypes.number\n};\n\nexport default PokeCard;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../stylesheets/PokeList.scss\";\nimport PropTypes from \"prop-types\";\nimport PokeCard from \"./PokeCard.js\";\n\nconst PokeList = props => {\n  const { pokemones, query, getPokemonDetail } = props;\n  return (\n    <ul className=\"pokemones\">\n      {pokemones\n        .filter(myPokemon => {\n          return query === \"\" ? true : myPokemon.name.substr(0, 2).toUpperCase() === query.substr(0, 2).toUpperCase();\n          // cuando sea igual me devuelva todo FALTA CONDICIÓN ELSE\n        })\n        .slice(0, 25)\n        .map((pokemon, index) => {\n          return (\n            <li className=\"pokemones__item\" id={index + 1} key={index + 1}>\n              <Link to={`/poke-detail/${pokemon.id}`} className=\"pokemon__link\" onClick={getPokemonDetail}>\n                <PokeCard pokemon={pokemon} index={index} />\n              </Link>\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\nPokeList.propTypes = {\n  pokemones: PropTypes.arrayOf(PropTypes.object).isRequired,\n  query: PropTypes.string\n};\n\nexport default PokeList;\n","import React, { Fragment } from \"react\";\nimport Filter from \"./Filter\";\nimport PokeList from \"./PokeList\";\nimport PropTypes from \"prop-types\";\n\nconst Home = props => {\n  const { getQuery, query, pokemones, getPokemonDetail } = props;\n\n  return (\n    <Fragment>\n      <Filter getQuery={getQuery} />\n      <PokeList pokemones={pokemones} query={query} getPokemonDetail={getPokemonDetail} />\n    </Fragment>\n  );\n};\n\nHome.propTypes = {\n  getQuery: PropTypes.func.isRequired,\n  pokemones: PropTypes.arrayOf(PropTypes.object).isRequired,\n  query: PropTypes.string\n};\n\nexport default Home;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport \"../stylesheets/PokeDetail.scss\";\n\nconst PokeDetail = props => {\n  const { routerProps, pokeDetail } = props;\n  const pokeId = parseInt(routerProps.match.params.pokeId);\n  const pokemon = pokeDetail.filter(item => item.id === pokeId);\n\n  if (pokemon[0]) {\n    const { name, id, image, height, weight, abilities, firstEvolutionName } = pokemon[0];\n    return (\n      <React.Fragment>\n        <div className=\"poke--detail\">\n          <p className=\"poke-detail__id\">ID/{id}</p>\n          <div className=\"poke-detail__evolution--container\">\n            <div className=\"poke-detail__evolution--start\">\n              <img src={image} className=\"poke-detail__image\" alt={name} />\n              <p>{name}</p>\n            </div>\n            <div className=\"poke-detail__evolution--first\">\n              <img src={image} className=\"poke-detail__image-first-evolution\" alt={firstEvolutionName} />\n              <p>{firstEvolutionName}</p>\n            </div>\n            {/* <img src={} className=\"poke-detail__image-second-evolution\" alt={} /> */}\n          </div>\n          <p className=\"poke-detail__height\">Height: {height} cm</p>\n          <p className=\"poke-detail__weight\">Weight: {weight} gr</p>\n\n          <ul className=\"poke-detail__abilities\">\n            {\" \"}\n            Abilities:\n            {abilities.map((ability, abilityIndex) => {\n              return (\n                <li className=\"poke-detail__ability\" key={abilityIndex}>\n                  {ability}\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n\n        <Link to=\"/\" className=\"poke--detail__back\">\n          {\"<\"} Volver{\" \"}\n        </Link>\n      </React.Fragment>\n    );\n  } else {\n    return (\n      <React.Fragment>\n        <p>Chacho, ese no lo tienes</p>\n        <Link to=\"/\" className=\"poke--detail__back__error\">\n          {\"<\"} Volver{\" \"}\n        </Link>\n      </React.Fragment>\n    );\n  }\n};\n\nPokeDetail.propTypes = {\n  routerProps: PropTypes.object.isRequired,\n  pokemones: PropTypes.arrayOf(PropTypes.object)\n};\n\nexport default PokeDetail;\n","import React from \"react\";\nimport \"../stylesheets/App.scss\";\nimport { fetchPokemones } from \"../services/fetchPokemones\";\nimport Home from \"./Home\";\nimport PokeDetail from \"./PokeDetail\";\n// import Background from \"./Background\";\nimport { Switch, Route } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pokemones: [],\n      query: \"\",\n      pokeDetail: []\n    };\n    this.getQuery = this.getQuery.bind(this);\n    this.getPokemonDetail = this.getPokemonDetail.bind(this);\n  }\n\n  componentDidMount() {\n    this.getPokemones();\n  }\n\n  getPokemones() {\n    fetchPokemones().then(data => {\n      for (let pokemon of data.results) {\n        fetch(pokemon.url)\n          .then(response => response.json())\n          .then(pokeInfo => {\n            fetch(pokeInfo.species.url)\n              .then(response => response.json())\n              .then(species => {\n                const types = [];\n                for (let item of pokeInfo.types) {\n                  types.push(item.type.name);\n                }\n                const infoAbilities = [];\n                for (let item of pokeInfo.abilities) {\n                  infoAbilities.push(item.ability.name);\n                }\n\n                const infoPokemon = {\n                  name: pokemon.name,\n                  image: pokeInfo.sprites.front_default,\n                  types: types,\n                  id: pokeInfo.id,\n                  evolution: species.evolves_from_species ? species.evolves_from_species.name : \"\"\n                };\n                this.setState({ pokemones: [...this.state.pokemones, infoPokemon] });\n              });\n          });\n      }\n    });\n  }\n\n  getPokemonDetail() {\n    fetchPokemones().then(data => {\n      for (let pokemon of data.results) {\n        fetch(pokemon.url)\n          .then(response => response.json())\n          .then(pokeInfoDetail => {\n            fetch(pokeInfoDetail.species.url)\n              .then(response => response.json())\n              .then(species => {\n                const infoAbilities = [];\n                for (let item of pokeInfoDetail.abilities) {\n                  infoAbilities.push(item.ability.name);\n                }\n                const pokeDetail = {\n                  name: pokeInfoDetail.name,\n                  id: pokeInfoDetail.id,\n                  image: pokeInfoDetail.sprites.front_default,\n                  height: pokeInfoDetail.height,\n                  weight: pokeInfoDetail.weight,\n                  abilities: infoAbilities,\n                  firstEvolutionName: species.evolves_from_species ? species.evolves_from_species.name : \"\"\n                  // firstEvolutionImage:\n                };\n                this.setState({ pokeDetail: [...this.state.pokeDetail, pokeDetail] });\n              });\n          });\n      }\n    });\n  }\n\n  getQuery(event) {\n    const query = event.currentTarget.value;\n    this.setState({ query: query });\n  }\n\n  render() {\n    const { pokemones, query, pokeDetail } = this.state;\n\n    return (\n      <div className=\"app\">\n        {/* <Background /> */}\n\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => {\n              return <Home getQuery={this.getQuery} query={query} pokemones={pokemones} getPokemonDetail={this.getPokemonDetail} />;\n            }}\n          />\n          <Route\n            path=\"/poke-detail/:pokeId\"\n            render={routerProps => {\n              return <PokeDetail routerProps={routerProps} pokemones={pokemones} pokeDetail={pokeDetail} />;\n            }}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  pokemones: PropTypes.arrayOf(PropTypes.object),\n  query: PropTypes.string\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"./stylesheets/index.scss\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}